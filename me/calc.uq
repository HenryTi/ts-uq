QUEUE QueueItemHistory ASC ONCE ONLY;

QUEUE QueueOpiHistory ONCE ONLY;

PROC CalcDateItemHistory ver 0.3 () LOG Error {
    VAR timeZone TINYINT
        , pDate DATE, value DEC(18, 4), item ENUM Item, opi ID ObjectPostItem;
    SET timeZone=TimeZone();
    FOR (VAR itemHistoryId ID OF QUEUE QueueItemHistory) {
        SET value = a.value, item=a.item
            FROM ItemHistory as a 
            WHERE a.id=itemHistoryId;

        if value IS NULL OR value = 0 {
            CONTINUE;
        }

        SET pDate = MinuteIdDate(itemHistoryId, timeZone);
        SET opi=ID(ObjectPostItem new KEY Object=0, Post=Post.Sys, Item=item);
        WITH IxOpiItemDate as a IX=opi XI=pDate 
            SET a.value=a.value+ifnull(value,0)
                , a.rows=a.rows+1
                , a.p1=itemHistoryId
            ON NEW a.p0=itemHistoryId;
        
        -- 计算MonthSum *
        PROC SumItemHistory(itemHistoryId);
    }
};

PROC CalcDateOpiHistory ver 0.2 () LOG Error {
    VAR timeZone TINYINT, pDate DATE, value DEC(18, 4), opi ID ObjectPostItem
        , item ENUM Item, post ENUM Post, object ID, startDate DATE;
    SET timeZone=TimeZone();
    LOG concat_ws(', ', timeZone)
        SUBJECT 'IxSupervise AccountBooking CalcDateOpiHistory start';
    FOR (VAR opiHistoryId ID OF QUEUE QueueOpiHistory) {
        SET pDate = MinuteIdDate(opiHistoryId, timeZone);
        SET value = a.value, opi=a.opi, object = b.object, item = b.item, post = b.post
            FROM OpiHistory as a 
                LEFT JOIN ObjectPostItem as b on b.id = a.opi
            WHERE a.id=opiHistoryId;

        if value IS NULL OR value = 0 {
            CONTINUE;
        }

        -- 一般销售人员opi汇总
        WITH IxOpiItemDate as a IX=opi XI=pDate 
            SET a.value=a.value+ifnull(value,0)
                , a.rows=a.rows+1
                , a.p1=opiHistoryId
            ON NEW a.p0=opiHistoryId;

        -- 一般销售人员objectAccount计算
        IF object IS NOT NULL {
            VAR accountValue DEC(18,4), objectAccountId ID;
            FOR (VAR account ENUM EnumAccount, ratio DEC(6,2)
                OF SELECT a.xi as account, a.ratio
                    FROM AccountBooking as a WHERE a.ix=item AND a.post = post)
            {
                SET accountValue=ratio * value / 100;
                SET objectAccountId=ID(
                    ObjectAccount new
                    KEY object=object, account=account);
                SET startDate=a.startDate FROM ObjectAccount as a WHERE a.id=objectAccountId;
                IF startDate<=pDate {
                    WITH ObjectAccount as a ID=objectAccountId 
                        SET a.balance=IFNULL(a.balance, 0)+accountValue;
                    WITH ObjectAccountHistory as a IX=objectAccountId XI=pDate
                        SET a.value=IFNULL(a.value,0)+accountValue, a.opi=opi;
                }
            }
        }

        -- 主管的绩效汇总，分为两步：第一步，根据ixOpiSupervise的配置也写入IxOpiItemDate；第二步，再根据accountbooking的配置写入objectaccount表 
        VAR opiSupervise ID ObjectPostItem;
        FOR (VAR supervisor ID, superiviceRatio DEC(6,2)
            OF SELECT a.ixx as supervisor, a.ratio as superiviceRatio
                FROM IxOpiSupervise as a 
                WHERE a.ix=opi AND a.xi<=pDate AND pDate<a.end
                ORDER BY a.ix DESC)
        {
            VAR accountValue DEC(18,4), objectAccountId ID, superviceValue DEC(18,4);

            SET opiSupervise = ID(objectPostItem new KEY Object=supervisor, Post=Post.staffSupervisor, Item=Item.supervisorFee);
            SET superviceValue=superiviceRatio * ifnull(value,0) / 100;
            WITH IxOpiItemDate as a 
                IX=opiSupervise XI=pDate 
                SET a.value=a.value+superviceValue, a.rows=a.rows + 1, a.p1=opiHistoryId;
            -- 只针对没有opi明细，又下级的数据直接合计的主管账户
            FOR (VAR account ENUM EnumAccount, ratio DEC(6,2)
                OF SELECT a.xi as account, a.ratio
                    FROM AccountBooking as a WHERE a.ix = Item.supervisorFee and a.post = Post.staffSupervisor)
            {
                SET objectAccountId=ID(
                    ObjectAccount new
                    KEY object=supervisor, account=account);
                SET startDate=a.startDate FROM ObjectAccount as a WHERE a.id=objectAccountId;
                IF startDate<=pDate {
                    SET accountValue=ratio * superviceValue / 100;
                    WITH ObjectAccount as a ID=objectAccountId 
                        SET a.balance=IFNULL(a.balance, 0)+accountValue;
                    WITH ObjectAccountHistory as a IX=objectAccountId XI=pDate
                        SET a.value=IFNULL(a.value,0)+accountValue, a.opi=opiSupervise;
                }
            }
        }
    }
};

PROC SumItemHistory ver 0.2 (
    itemHistoryId ID
) {
    VAR timeZone TINYINT = unittimezone(), tick INT, compileTick INT;
    VAR value DEC(18,4), date DATE, item ENUM Item
        , biz ID, bizOp ID;
    VAR product ID, customerAccount ID, m DATE; -- , bizmonth TINYINT, bizdate TINYINT;

    SET biz=b.biz
        , bizOp=a.bizOp
        , value=a.value
        , item=a.item
        FROM ItemHistory as a
            LEFT JOIN DxBizOp as b ON b.id=a.bizOp
        WHERE a.id=itemHistoryId;
    IF biz IS NULL {
        RETURN;
    }

    LOG concat('ProcCalcHistorySum: ', itemHistoryId) SUBJECT 'Schedule CalcSum';
    SET date=MinuteIdDate(itemHistoryId, timeZone);
    -- WITH DaySumItem as a IX=item XI=date SET a.value=IFNULL(a.value,0) + IFNULL(value,0);

    -- set bizdateId = BizMonthId(date);
    -- set bizmonth = bizmonth();
    -- set bizdate = bizdate();

    SET m=BizMonthId(date, bizdate()); --  YEAR(date)*100+MONTH(date);

    IF item=Item.orderAmount OR item = Item.orderReturn {
        SET customerAccount=c.customerAccount
            , product=b.product
            FROM OrderDetail as b
                JOIN OrderMain as c ON b.main=c.id
            WHERE b.id=biz;

        -- product
        WITH MonthSumProduct as a IXX=item IX=m XI=product SET a.value=a.value + value;
        -- customerAccount
        WITH MonthSumCustomer as a IXX=item IX=m XI=customerAccount SET a.value=a.value + value;
    }
};

PROC CalcDateItemHistoryGroup() {
    VAR pCalcItemDate BIGINT, timeZone TINYINT
        , pDate DATE, pDateNext DATE, pEnd DATE
        , value DEC(18, 4), item ENUM Item, opi ID;
    SET timeZone=timeZone();
    SETTING 'pCalcDateItemHistoryGroup' CHAR TO pDate;
    IF pDate IS NULL {
        SET pDate = MinuteIdDate((select MIN(a.id) from ItemHistory as a), timeZone);
    }
    SET pEnd = MinuteIdDate((select MAX(a.id) from ItemHistory as a), timeZone);
    WHILE 1=1 {
        IF pDate >= pEnd {
            BREAK;
        }
        SET pDateNext=DATEADD(day, 1, pDate);
        FOR (VAR item ENUM Item, d DATE, s DEC(18,4), c INT, p0 ID, p1 ID
            OF SELECT item, d, sum(a.value) as s, count(*) as c, min(a.id) as p0, max(a.id) as p1
                FROM ItemHistory as a
                WHERE a.id>=MinuteIdFromDate(pDate, timeZone) AND a.id<=MinuteIdFromDate(pDateNext, timeZone)
                GROUP BY a.item as item, MinuteIdDate(a.id, timeZone) as d
            )
        {
            TRANSACTION Start;
            SET opi=ID(ObjectPostItem new KEY Object=0, Post=Post.Sys, Item=item);
            WITH IxOpiItemDate as a IX=opi XI=d SET a.value=s, a.rows=c, a.p0=p0, a.p1=p1;
            SETTING 'pCalcDateItemHistoryGroup' CHAR = pDate;
            TRANSACTION Commit;
        }
        SET pDate=pDateNext;
        SLEEP Const_Sleep_Time;
    }
};

PROC CalcDateOpiHistoryGroup() {
    VAR pCalcItemDate BIGINT, timeZone TINYINT
        , pDate DATE, pDateNext DATE, pEnd DATE
        , value DEC(18, 4), item ENUM Item;
    SET timeZone=timeZone();
    SETTING 'pCalcDateOpiHistoryGroup' CHAR TO pDate;
    IF pDate IS NULL {
        SET pDate = MinuteIdDate((select MIN(a.id) from OpiHistory as a), timeZone);
    }
    SET pEnd = MinuteIdDate((select MAX(a.id) from OpiHistory as a), timeZone);
    WHILE 1=1 {
        IF pDate >= pEnd {
            BREAK;
        }
        SET pDateNext=DATEADD(day, 1, pDate);
        FOR (VAR opi ID, d DATE, s DEC(18,4), c INT, p0 ID, p1 ID
            OF SELECT opi, d, sum(a.value) as s, count(*) as c, min(a.id) as p0, max(a.id) as p1
                FROM OpiHistory as a
                WHERE a.id>=MinuteIdFromDate(pDate, timeZone) AND a.id<=MinuteIdFromDate(pDateNext, timeZone)
                GROUP BY a.opi as opi, MinuteIdDate(a.id, timeZone) as d
            )
        {
            TRANSACTION Start;
            WITH IxOpiItemDate as a IX=opi XI=d SET a.value=s, a.rows=c, a.p0=p0, a.p1=p1;
            SETTING 'pCalcDateOpiHistoryGroup' CHAR = pDate;
            TRANSACTION Commit;
        }
        SET pDate=pDateNext;
        SLEEP Const_Sleep_Time;
    }
};