BUS JkOrderBus ver 0.5 from 百灵威系统工程部/[jk-order]
ACCEPT order {
	VAR mainId ID;
	SET mainId = id;
    LOG CONCAT_WS(' ', mainId) SUBJECT 'JkOrderBus ACCEPT order';
	WITH OrderMain as a ID=mainId SET a.no=no
        , a.customerAccount=customerAccount
        , a.type=type
        , a.seller=seller
        , a.currency = currency
        , a.stamp=$stamp;
    WITH DxBizMain as a ID=mainId SET a.no = no, a.stamp=$stamp;
	FOR detail {
        LOG CONCAT_WS(' ', id, quantity, item) SUBJECT 'JkOrderBus ACCEPT orderDetail';
		WITH OrderDetail as a 
			ID = id
			SET a.main=mainId
				, a.item=item, a.product=product
				, a.quantity=quantity
                , a.price=price
				, a.amount=amount
                , a.amountAfterTax = amountAfterTax;
        WITH DxBiz ID=id SET main=mainId;
        IF EXISTS(SELECT a.id FROM DxOrderDetail as a WHERE a.id=id AND a.margin IS NOT NULL LOCK) {
            WITH DxBiz ID=id SET ready=1;
            -- 如果订单明细存在退货单，则其退货单ready设置为1
            VAR returnDetail ID;
            SET returnDetail = a.id from ReturnDetail as a where a.orderDetail = id;
            IF (returnDetail is not null){
                WITH DxBiz ID = returnDetail SET ready = 1;
            }
        }

        -- 检查写入特殊提成比例
        VAR bizOpDeliverDoneStamp INT;
        SET bizOpDeliverDoneStamp = a.stamp FROM DxBizOp as a 
        WHERE a.biz = id AND a.type = EnumBizOpType.orderDeliverDone;
        IF(bizOpDeliverDoneStamp IS NOT NULL){
            -- PROC ProcSetSpecialRatio(id, EnumBizOpType.orderDeliverDone, bizOpDeliverDoneStamp);
            PROC ProcSetBizBooking(id, EnumBizOpType.orderDeliverDone, bizOpDeliverDoneStamp);
        } 
        VAR bizOpReceiveDoneStamp INT;
        SET bizOpReceiveDoneStamp = a.stamp FROM DxBizOp as a 
        WHERE a.biz = id AND a.type = EnumBizOpType.orderReceiveDone;
        IF(bizOpReceiveDoneStamp IS NOT NULL){
            -- PROC ProcSetSpecialRatio(id, EnumBizOpType.orderReceiveDone, bizOpReceiveDoneStamp);
            PROC ProcSetBizBooking(id, EnumBizOpType.orderReceiveDone, bizOpReceiveDoneStamp);
        } 
	}

    VAR objSellerId ID, sellerItem ENUM Item;
    SET objSellerId = a.id from ObjectBranch as a where a.seller = seller LOCK;
    IF type=OrderType.Customer {
        -- 所有的给customer订单绑定到ManagerIT
        VAR objManagerId ID;
        SET objManagerId=ID(ObjectPost, Post.managerIT);
        IF objManagerId IS NULL {
            SET objManagerId=ID(Object new);    -- 生成一个新object id；
            WITH Object ID=objManagerId SET type=EnumObjectType.post;   -- 这个新object id和它的类型一起写入到 object 中；
            WITH ObjectPost as a ID=objManagerId SET a.post=Post.managerIT; -- 再在对应的objectxxx中记录object id与原始id的关系
        }
        VAR bizMainBoundId ID = ID(
            BizMainBound new 
            KEY bizMain=mainId, post=POST.managerIT, item=ITEM.amountFee, to=objManagerId
        );

        set sellerItem = ITEM.orderAmount;
    }
    ELSEIF type=OrderType.SaleBranch OR type=OrderType.FactoryBranch {
        VAR objBranchId ID, post ENUM Post, Item ENUM Item;
        SET objBranchId=ID(ObjectBranch, customerAccount);
        IF objBranchId IS NULL {
            SET objBranchId=ID(Object new);
            WITH Object ID=objBranchId SET type=EnumObjectType.branch;
            WITH ObjectBranch as a ID=objBranchId SET a.branch=customerAccount;
        }

        IF type=OrderType.SaleBranch {
            set post = Post.saleBranch;
            set item = Item.orderSaleTransferIn;

            set sellerItem = Item.orderSaleTransferOut;
        }
        ELSE {
            SET post=Post.factoryBranch;
            set item = Item.orderFactoryTransferIn;

            set sellerItem = Item.orderFactoryTransferOut;
        }
        VAR bizMainBoundId ID = ID(
            BizMainBound new 
            KEY bizMain=mainId, post=post, item=post, to=objBranchId
        );
    }
    ELSEIF type=OrderType.Distributor {
        -- 暂时不处理 2021-12-2
    }

    VAR bizMainBoundId ID = ID(
        BizMainBound new 
        KEY bizMain=mainId, post=Post.sellerBranch, item=sellerItem, to=objSellerId
    );

    -- PROC ProcSetOrderReady(mainId, OrderReady.sheet);
    PROC ProcQueueBizMain(mainId);
}
ACCEPT [receive-done] {
    LOG CONCAT_WS(' ', id) SUBJECT 'ACCEPT JkOrderBus.receive-done';
	FOR detail {
        IF exists(SELECT a.id FROM DxBizOp as a WHERE a.id=id LOCK) {
            CONTINUE;
        }
		WITH DxOrderDetail ID=orderDetail SET receiveDone+=value;
        -- PROC ProcSetSpecialRatio(orderdetail, EnumBizOpType.orderReceiveDone, $stamp);
        PROC ProcSetBizBooking(orderdetail, EnumBizOpType.orderReceiveDone, $stamp);
        WITH DxBizOp as a ID=id 
            SET a.type=EnumBizOpType.orderReceiveDone, a.biz=orderDetail, a.value=value, a.stamp=$stamp;
        WITH QueueBizOp as a ID=id SET a.bizop=id;
	}
    -- SCHEDULE ExecQueueBizOp DELAY 1;
}
ACCEPT [return] {
    -- 退货时，退货明细id(detail.id)既是“单”，又是“指令”：
    -- 作为指令，它相关的单是原 orderDetail ，要写入到bizOp中，
    -- 作为“单”，要写入到 ReturnDetail / DxBiz 中，
    var returnMainId ID;
    set returnMainId = id;
    WITH ReturnMain ID = returnMainId;
    WITH DxBizMain as a ID = returnMainId SET a.stamp = $stamp;

	FOR detail {
        VAR mainId ID;
        SET mainId = null;
        SET mainId = a.main
        from    orderDetail as a
        where   a.id = orderdetail;
        
        IF not exists(SELECT a.id FROM DxBizOp as a WHERE a.id=id LOCK) {
            WITH DxOrderDetail ID=orderDetail SET return+=quantity;

            /*
            VAR specialRatio DEC(6,2);
            SET specialRatio = a.ratio FROM IxBizSpecialRatio as a where a.ix = orderdetail and a.xi = EnumBizOpType.orderDeliverDone;
            IF(specialRatio IS NOT NULL){
                WITH IxBizSpecialRatio ix = orderdetail xi = EnumBizOpType.orderReturn SET ratio = specialRatio * -1;
            }
            SET specialRatio = a.ratio 
            FROM BizBooking as a 
            WHERE a.biz = orderdetail AND a.bizOpType = EnumBizOpType.orderDeliverDone
                    AND a.post = AND a.item = item;
            */
            
            WITH DxBizOp as a ID=id 
                SET a.type=EnumBizOpType.orderReturn, a.biz=orderDetail, a.value=quantity, a.stamp=$stamp;
            WITH QueueBizOp as a ID=id SET a.bizop=id;

            if(mainId is null)
                CONTINUE;

            VAR seller ID, customerAccount ID, type ENUM OrderType;
            set seller = a.seller, customerAccount = a.customerAccount, type = a.type
                from    orderMain as a
                where   a.id = mainId
                LOCK;

            VAR objSellerId ID, sellerItem ENUM Item;
            SET objSellerId = a.id from ObjectBranch as a where a.seller = seller LOCK;
            IF type=OrderType.Customer {
                -- 所有的给customer订单绑定到ManagerIT
                VAR objManagerId ID;
                SET objManagerId=ID(ObjectPost, Post.managerIT);
                IF objManagerId IS NULL {
                    SET objManagerId=ID(Object new);
                    WITH Object ID=objManagerId SET type=EnumObjectType.post;
                    WITH ObjectPost as a ID=objManagerId SET a.post=Post.managerIT;
                }
                VAR bizMainBoundId ID = ID(
                    BizMainBound new 
                    KEY bizMain=mainId, post=POST.managerIT, item=ITEM.amountFee, to=objManagerId
                );

                set sellerItem = ITEM.orderReturn;
            }
            ELSEIF type=OrderType.SaleBranch OR type=OrderType.FactoryBranch {
                VAR objBranchId ID, post ENUM Post, Item ENUM Item;
                SET objBranchId=ID(ObjectBranch, customerAccount);
                IF objBranchId IS NULL {
                    SET objBranchId=ID(Object new);
                    WITH Object ID=objBranchId SET type=EnumObjectType.branch;
                    WITH ObjectBranch as a ID=objBranchId SET a.branch=customerAccount;
                }

                IF type=OrderType.SaleBranch {
                    set post = Post.saleBranch;
                    set item = Item.orderSaleTransferIn;

                    set sellerItem = Item.orderSaleTransferOut;
                }
                ELSE {
                    SET post=Post.factoryBranch;
                    set item = Item.orderFactoryTransferIn;

                    set sellerItem = Item.orderFactoryTransferOut;
                }
                VAR bizMainBoundId ID = ID(
                    BizMainBound new 
                    KEY bizMain=mainId, post=post, item=post, to=objBranchId
                );
            }
            ELSEIF type=OrderType.Distributor {
                -- 暂时不处理 2021-12-2
            }

            VAR bizMainBoundId ID = ID(
                BizMainBound new 
                KEY bizMain=mainId, post=Post.sellerBranch, item=sellerItem, to=objSellerId
            );
        }

        -- return detail本身作为单据时的处理
        WITH ReturnDetail as a ID = id SET a.main = returnMainId, a.orderDetail = orderdetail;
        WITH DxBiz ID = id SET main = returnMainId;
        IF EXISTS(SELECT a.id from DxBiz as a where a.id = orderdetail and a.ready = 1) {
            WITH DxBiz ID = id SET ready = 1;
        }

        FOR(VAR post ENUM Post, item ENUM Item, to ID 
            OF SELECT a.post, a.item, a.to from BizMainBound as a 
            where a.bizMain = mainId and a.post = Post.staffSales and a.item in (Item.profitFee, Item.couponFee)
        ){
            VAR bizReturnMainBoundId ID = ID(
                BizMainBound new 
                KEY bizMain=returnMainId, post=post, item=item, to=to
            );
        }
	}
    PROC ProcQueueBizMain(returnMainId);
    -- SCHEDULE ExecQueueBizOp DELAY 1;
}
ACCEPT [order-sale-margin] {
    LOG CONCAT_WS(' ', order) SUBJECT 'JkOrderBus ACCEPT order-sale-margin';
    FOR detail {
        LOG CONCAT_WS(' ', [orderdetail], [value]) SUBJECT 'ACCEPT JkOrderBus.order-sale-margin';
        if([value] is not null){
            WITH DxOrderDetail ID=[orderdetail] SET margin=[value];
            IF EXISTS(SELECT a.id FROM OrderDetail as a WHERE a.id=[orderdetail] LOCK) {
                WITH DxBiz ID=orderDetail SET ready=1;
                -- 如果订单明细存在退货单，则其退货单ready设置为1
                VAR returnDetail ID;
                SET returnDetail = a.id from ReturnDetail as a where a.orderDetail = orderdetail;
                IF (returnDetail is not null){
                    WITH DxBiz ID = returnDetail SET ready = 1;
                }
            }
        }
    }
    -- PROC ProcSetOrderReady(order, OrderReady.margin);
    PROC ProcQueueBizMain(order);
}
ACCEPT [order-bound-staff-sales] {
    LOG CONCAT_WS(' ', order) SUBJECT 'JkOrderBus ACCEPT order-bound-staff-sales';
    VAR bizMainBoundId ID;
    FOR to {
		VAR toId ID;
        SET toId=ID(ObjectStaff, id);
        IF toId IS NULL {
            SET toId=ID(Object new);
            WITH Object ID=toId SET type=EnumObjectType.staff;
            WITH ObjectStaff ID=toId SET staff=id;
        }
        IF NOT EXISTS(select 1 from BizMainBound as a 
        where a.bizMain = order and a.post = post.staffSales and a.item = ITEM.orderAmount) {
            SET bizMainBoundId = ID(
                BizMainBound new 
                KEY bizMain=order, post=Post.staffSales, item=ITEM.orderAmount, to=toId
            );
        }
        -- 指定客户之后的提成
        IF [bound-type]='assign' AND NOT EXISTS (select 1 from BizMainBound as a 
        where a.bizMain = order and a.post = post.staffSales and a.item = ITEM.profitFee) {
            SET bizMainBoundId = ID(
                BizMainBound new 
                KEY bizMain=order, post=Post.staffSales, item=ITEM.profitFee, to=toId
            );
        }
        ELSEIF [bound-type]='coupon' AND NOT EXISTS (select 1 from BizMainBound as a 
        where a.bizMain = order and a.post = post.staffSales and a.item = ITEM.couponFee) {
            SET bizMainBoundId = ID(
                BizMainBound new 
                KEY bizMain=order, post=Post.staffSales, item=ITEM.couponFee, to=toId
            );
        }
        ELSEIF [bound-type]='cosales' AND NOT EXISTS (select 1 from BizMainBound as a 
        where a.bizMain = order and a.post = post.staffCoSales and a.item = ITEM.couponCoSalesFee) {
            SET bizMainBoundId = ID(
                BizMainBound new 
                KEY bizMain=order, post=Post.staffCoSales, item=ITEM.couponCoSalesFee, to=toId
            );
        }
    }
    PROC ProcQueueBizMain(order);
}
ACCEPT [order-bound-agent] { -- 轻代理
    VAR bizMainBoundId ID;
    FOR to {
		VAR toId ID;
		SET toId=ID(ObjectAgent, id);
        IF toId IS NULL {
            SET toId=ID(Object new);
            WITH Object ID=toId SET type=EnumObjectType.agent;
            WITH ObjectAgent ID=toId SET agent=id;
        }
        SET bizMainBoundId = ID(
            BizMainBound new
            KEY bizMain=order, post=Post.agent, item=ITEM.couponFee, to=toId
        );
    }
    PROC ProcQueueBizMain(order);
}
ACCEPT [order-bound-distributor] { -- 分销商
    VAR bizMainBoundId ID;
    BUS JkOrderBus.[order-sale-cost] SET order=-1;
    BUS JkOrderBus.[order-sale-cost] DEFER;
    BUS JkOrderBus.[order-sale-cost] DEFER 0;
    BUS JkOrderBus.[order-sale-cost] DEFER 1;
    SEND EMAIL ON webUserAuditPassET to 0;
    FOR to {
		VAR toId ID;
        SET toId=ID(ObjectDistributor, id);
        IF toId IS NULL {
            SET toId=ID(Object new);
            WITH Object ID=toId SET type=EnumObjectType.distributor;
            WITH ObjectDistributor ID=toId SET distributor=id;
        }
        SET bizMainBoundId = ID(
            BizMainBound new
            KEY bizMain=order, post=Post.distributor, item=ITEM.profitFee, to=toId
        );
    }
    PROC ProcQueueBizMain(order);
}
ACCEPT [order-bound-customer] {
    VAR bizMainBoundId ID;
    FOR to {
		VAR toId ID;
        SET toId=ID(ObjectCustomer, id);
        IF toId IS NULL {
            SET toId=ID(Object new);
            WITH Object ID=toId SET type=EnumObjectType.customer;
            WITH ObjectCustomer ID=toId SET customer=id;
        }
        SET bizMainBoundId = ID(
            BizMainBound new
            KEY bizMain=order, post=Post.customer, item=ITEM.customerPoint, to=toId
        );
    }
    PROC ProcQueueBizMain(order);
}
;

templet webUserAuditPassET (
    name
)
subject /- 恭喜你 -/
/-
-/;

PROC ProcQueueBizMain(
    bizMain ID,
) {
    WITH QueueBizMain as a ID=bizMain SET a.bizMain=bizMain;
    /*
    IF  NOT EXISTS(SELECT a.id FROM QueueBizMain as a WHERE a.bizMain=bizMain)
    {
        VAR queueId ID = ID(QueueBizMain new KEY bizMain=bizMain);
        -- SCHEDULE ExecQueueBizMain DELAY 1;
    }
    */
};
